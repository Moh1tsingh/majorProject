// '' for keywords
// 1. It should not be left recursive.
// 2. It should be left-factored. (Alternates should not have common prefixes).
// 3. Language should have a recursion facility.

prog: { stmt }

stmt: 
    | 'exit' '(' expr ')' ';'
    | 'let' ident '=' [term epxr] ';'

expr: factor { ['+' '-'] factor }

factor: term { ['*' '/'] term }

term:
    | '(' expr ')'
    | int_lit
    | ident

ident: [a-z A-Z _] [a-z A-Z 0-9 _]*

int_lit: [0-9]+
